aliases:
  checkout_with_cache: &checkout_with_cache
    - restore_cache:
        keys:
          - source-v1-{{ .Branch }}-{{ .Revision }}
          - source-v1-{{ .Branch }}-
          - source-v1-
    - checkout
    - save_cache:
        key: source-v1-{{ .Branch }}-{{ .Revision }}
        paths: ".git"

  jvm_docker: &jvm_docker
    docker:
      - image: circleci/openjdk:11.0.2-jdk

  jvm_options: &jvm_options
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  working_dir: &working_dir
    working_directory: ~/repo

  jvm_default: &jvm_default
    <<: *jvm_docker
    <<: *jvm_options
    <<: *working_dir

version: 2
jobs:
  build:
    <<: *jvm_default

    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths: ".git"

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - restore_cache:
          keys:
            - v1-build-{{ .Revision }}
            - v1-build-
      - run: gradle build
      - save_cache:
          paths:
            - ~/.gradle
            - build
          key: v1-build-{{ .Revision }}

  fatJar:
    <<: *jvm_default

    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths: ".git"

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - restore_cache:
          keys:
            - v1-build-{{ .Revision }}
            - v1-build-
      - run: gradle build
      - save_cache:
          paths:
            - ~/.gradle
            - build
          key: v1-build-{{ .Revision }}

      - run:
          name: Build fat jar
          command: gradle fatJar

      - persist_to_workspace:
          root: build/libs
          paths: assessor.jar

  reports-generate:
    <<: *jvm_default

    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths: ".git"

      - attach_workspace:
          at: workspace
      - run:
          name: Build reports
          command: java -jar workspace/assessor.jar all --dir workspace/reports
      - persist_to_workspace:
          root: workspace
          paths: reports

  reports-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths: ".git"

      - attach_workspace:
          at: workspace
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@agoranomic.org"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "1b:a0:f8:4f:da:a0:be:ce:6c:08:ca:a1:d9:73:0d:ad"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] CI Updates" --dist workspace/reports

workflows:
  version: 2
  build_and_report:
    jobs:
      - build
      - fatJar:
          requires:
            - build
      - reports-generate:
          requires:
            - fatJar
      - reports-deploy:
          requires:
            - reports-generate
          filters:
            branches:
              only: master